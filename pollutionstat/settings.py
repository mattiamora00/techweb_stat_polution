"""
Django settings for pollutionstat project.

Generated by 'django-admin startproject' using Django 3.2.18.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-dw3z7dq=gx@1-8#z$h9^v7hh!izg26djyu3+e=p#+@xel7kqjy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Django-Tenants Settings
TENANT_MODEL = "tenant.Tenant"
TENANT_DOMAIN_MODEL = "tenant.Domain"
TENANT_LIMIT_SET_CALLS = True
HAS_MULTI_TYPE_TENANTS = True
MULTI_TYPE_DATABASE_FIELD = 'type'

TENANT_TYPES = {
    "public": {  # this is the name of the public schemas from get_public_schema_name
        "APPS": [
             'django.contrib.contenttypes',
             'django.contrib.admin',
             'django.contrib.auth',
             'django.contrib.sessions',
             'django.contrib.messages',
             'django.contrib.staticfiles',
             'corsheaders',
             'django_tenants',
             'django_filters',
             'graphene_django',
             'tenant',
             'geo',
             'plans',
             'ilness',
             'pollutants',
             'pollutionstat'
             # sharecd apps here
                 ],
        "URLCONF": "pollutionstat.urls",
    },
    "CLASSIC": {  # this is the name of the public schemas from get_public_schema_name
        "APPS": [
             'django.contrib.contenttypes',
             'django.contrib.admin',
             'django.contrib.auth',
             'django.contrib.sessions',
             'django.contrib.messages',
             'django.contrib.staticfiles',
             'corsheaders',
             'django_filters',
             'graphene_django',
             'users',
             'sensors',
                 ],
        "URLCONF": "pollutionstat.urls",
    },
}

ROOT_URLCONF = 'pollutionstat.urls'

INSTALLED_APPS = []
for schema in TENANT_TYPES:
    INSTALLED_APPS += [app for app in TENANT_TYPES[schema]["APPS"] if app not in INSTALLED_APPS]


# Application definition
"""
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ilness',
    'geo',
    'plans',
    'pollutants',
    'sensors'
]
"""
GRAPHENE = {
    'SCHEMA': 'pollutionstat.schemas.schemas',
}

MIDDLEWARE = [
    'django_tenants.middleware.main.TenantMainMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
]


ROOT_URLCONF = 'pollutionstat.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pollutionstat.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django_tenants.postgresql_backend',  #'ENGINE': 'django.db.backends.postgresql_psycopg2', django_tenants.postgresql_backend
        'NAME': 'pollutionstatdb',
        'USER': 'pollutionstatdb',
        'PASSWORD': 'pollutionstatdb',
        'HOST': 'pollutionstat.com',
        'PORT': '5432',
    },
}

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

DATABASE_ROUTERS = (
    'django_tenants.routers.TenantSyncRouter',
)

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
